name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-lint:
    name: Backend Lint (Ruff)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: idsideAI_FIXED
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install Ruff only
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Ruff gate (E9, F821, B008)
        run: ruff check --select E9,F821,B008 .

  backend-test:
    name: Backend Tests (pytest smoke)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: idsideAI_FIXED
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
             hon-version: '3.12'             hon-version: '3.12'             hon-version: '3.12'             hon          on -m pip install --upgrade pip
          pip install -r requirements.txt fastapi uvicorn sqlmodel httpx pytest
      - name: Run pytest (smoke)
        run: pytest -q

  openapi-guard:
    name: OpenAPI Guard
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: idsideAI_FIXED
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install minimal deps
        run: pip install fastapi uvicorn
      - name: Start server (background)
        run: |
          nohup python -m uvicorn backend.app:app --host 127.0.0.1 --port 8013 > run.log 2>&1 &
          for i in {1..25}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8013/docs || true)
            [ "$code" = "200" ] && break
            sleep 1
          done
          [ "$code" = "200" ] || (echo "Server failed to start" && tail -n 200 run.log && exit 1)
      - name: Check required routes
        run: python scripts/check_openapi.py http://127.0.0.1:8013
