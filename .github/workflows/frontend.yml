name: Frontend (Node)

on:
  push:
    branches: ["main", "release/*"]
    paths:
      - "idsideAI_FIXED/frontend/**"
      - ".github/workflows/frontend.yml"
  pull_request:
    branches: ["main", "release/*"]
    paths:
      - "idsideAI_FIXED/frontend/**"
      - ".github/workflows/frontend.yml"
  workflow_dispatch:

jobs:
  frontend:
    name: Frontend (Node)
    runs-on: ubuntu-latest
    env:
      CI: "true"
    defaults:
      run:
        working-directory: idsideAI_FIXED/frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"  # LTS
        # (Deliberately no 'cache:' here to avoid lockfile errors)

      - name: Enable Corepack (Yarn/Pnpm support)
        run: corepack enable

      # Optional caches (safe only if the lockfile exists)
      - name: Cache npm (if package-lock.json present)
        if: ${{ hashFiles('idsideAI_FIXED/frontend/package-lock.json') != '' || hashFiles('idsideAI_FIXED/frontend/npm-shrinkwrap.json') != '' }}
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-npm-${{ hashFiles('idsideAI_FIXED/frontend/package-lock.json', 'idsideAI_FIXED/frontend/npm-shrinkwrap.json') }}
          restore-keys: ${{ runner.os }}-node-npm-

      - name: Cache Yarn (if yarn.lock present)
        if: ${{ hashFiles('idsideAI_FIXED/frontend/yarn.lock') != '' }}
        uses: actions/cache@v4
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-node-yarn-${{ hashFiles('idsideAI_FIXED/frontend/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-yarn-

      - name: Show npm cache dir (diagnostic)
        run: npm config get cache

      - name: Install dependencies
        shell: bash
        run: |
          set -euo pipefail
          if [ -f yarn.lock ]; then
            # Yarn v3+ via Corepack; --immutable prefers exact lockfile, fallback to install
            yarn install --immutable || yarn install
          else
            if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
              npm ci
            else
              npm install
            fi
          fi

      - name: Lint (non-blocking if script missing)
        run: npm run -s lint --if-present

      - name: Unit tests (non-blocking if script missing)
        run: npm run -s test --if-present

      - name: Type check (tsconfig only)
        if: ${{ hashFiles('idsideAI_FIXED/frontend/tsconfig.json') != '' }}
        run: npx tsc --noEmit

      - name: Build (non-blocking if script missing)
        run: npm run -s build --if-present

      - name: Upload build artifact (optional)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: |
            idsideAI_FIXED/frontend/dist
            idsideAI_FIXED/frontend/build
          if-no-files-found: ignore
